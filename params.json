{
  "name": "Lannister",
  "tagline": "High performance MQTT broker w/ full spec,Clustering,WebSocket,SSL on Java - Netty & Hazelcast",
  "body": "# Lannister\r\n\r\n[![Build Status](https://travis-ci.org/anyflow/lannister.svg?branch=master)](https://travis-ci.org/anyflow/lannister) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/8d72feca76504d89a9846beecbbbc34b)](https://www.codacy.com/app/anyflow/lannister?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=anyflow/lannister&amp;utm_campaign=Badge_Grade) [![Codacy Badge](https://api.codacy.com/project/badge/Coverage/8d72feca76504d89a9846beecbbbc34b)](https://www.codacy.com/app/anyflow/lannister?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=anyflow/lannister&amp;utm_campaign=Badge_Coverage)\r\n\r\nHigh performance MQTT broker w/ full specifications support, Clustering, WebSocket, SSL on Java - [Netty](https://github.com/netty/netty) & [Hazelcast](https://github.com/hazelcast/hazelcast) **under CONSTRUCTION**.\r\n\r\n## Features\r\n1. Full Protocol Specifications([MQTT Version 3.1](http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html), [MQTT Version 3.1.1](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html)) Support includes\r\n   * QoS 0,1,2 on Publish / Subscribe\r\n   * Clean / Persistent Session\r\n   * Retained / Will Message\r\n2. 1000K connections per node\r\n3. Clustering\r\n   * Topic / Message / Message Status / Session redundant\r\n   * No SPOF(peer-to-peer based : No master and slave)\r\n   * Easy Scaling out\r\n4. WebSocket\r\n5. SSL (TCP / WebSocket both)\r\n6. $SYS\r\n7. Plugin Support\r\n   * Authenticator\r\n   * Authorizer\r\n   * ServiceChecker\r\n   * ConnectEventListener\r\n   * DisconnectEventListener\r\n   * PublishEventListener\r\n   * DeliveredEventListener\r\n   * SubscribeEventListener\r\n   * UnsubscribeEventListener\r\n8. HTTP REST APIs for admin, client\r\n9. Web admin Dashboard _(arranged for Lannister version 1.1)_\r\n10. Data Persistence _(arranged for Lannister version 1.1)_\r\n\r\n## Getting Started\r\nLannister is **under CONSTRUCTION**. But the most of features above are implemented and tested. You can run and test Lannister simply via,\r\n```{r, engine='bash', count_lines}\r\n# The below commands require Java 8 and Maven 3\r\n\r\n# Clone lannister source\r\ngit clone https://github.com/anyflow/lannister.git\r\n\r\n# Change directory to lannister\r\ncd lannister\r\n\r\n# Build all(interface, server, plugin-example) projects\r\nmvn install\r\n\r\n# Run lannister server directed by lannister.cfg/hazelcast.config.xml/log4j.xml files in conf directory\r\nmvn exec:java -pl server\r\n```\r\n## Version History\r\n##### version 0.9.5.1 / Sep 11, 2016\r\n- Externalize Hazelcast config - Add hazelcast.config.xml\r\n- Add docker file and docker property - Run maven with profile (mvn install -Plannister.docker)\r\n- Add null checker in hazelcast serialization logics\r\n- Change WebSocket(ssl) ports to 9001(9002)\r\n- Update Hazelcast version to 3.7.1\r\n- Update Netty version to 4.1.5\r\n- Add PMD / Findbugs / Jacoco / surefire reports\r\n- Start clustering TEST/FIX\r\n  - Fix subscription failing on existing topic in clustered state\r\n- Fix subscriptions remaining on disposing (clean) session\r\n- Fix reconnect failing persisted session  \r\n- Fix remaining no subscriber topic\r\n\r\n##### version 0.9.5.0 / May 21, 2016\r\n- Code Review, Test based on chapter 3.2 of Spec v3.1.1 Mandatory normative statements\r\n- Add $SYS Required Topics\r\n\r\n##### version 0.9.5-beta1 / May 16, 2016\r\n- Code Review, Test based on chapter 3.1 of Spec v3.1.1 Mandatory normative statements\r\n- Implement full features of Protocol Specification MQTT version 3.1.1\r\n- Add clustering\r\n- Add WebSocket _(default port: 2883)_\r\n- Add SSL _(default port: 8883, default WebSocket SSL port: 9883)_\r\n- Add plugin's : Framework & Default / Example Plugins\r\n- Add admin HTTP REST APIs : listing topics, sessions\r\n\r\n## Author\r\nPark Hyunjeong / <anyflow@gmail.com>\r\n\r\n## License\r\nLannister is released under version 2.0 of the [Apache License](http://www.apache.org/licenses/LICENSE-2.0).",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}