<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2016 The Lannister Project Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>lannister-server</artifactId>
	<name>Lannister server</name>
	<description>Lannister server project itself</description>
	<parent>
		<groupId>net.anyflow</groupId>
		<artifactId>lannister</artifactId>
		<version>0.9.9-SNAPSHOT</version>
	</parent>
	<scm>
		<url>https://github.com/anyflow/lannister/tree/master/server</url>
		<connection>scm:git:git@github.com:anyflow/lannister.git</connection>
		<developerConnection>scm:git:git@github.com:anyflow/lannister.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<dependencies>
		<dependency>
			<groupId>net.anyflow</groupId>
			<artifactId>lannister-interface</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ignite</groupId>
			<artifactId>ignite-core</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ignite</groupId>
			<artifactId>ignite-indexing</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version>
		</dependency>
		<!-- the core, which includes Streaming API, shared low-level abstractions 
			(but NOT data-binding) -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.7.4</version>
		</dependency>
		<!-- Just the annotations; use this dependency if you want to attach annotations 
			to classes without connecting them to the code. -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.7.4</version>
		</dependency>
		<!-- databinding; ObjectMapper, JsonNode and related classes are here -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.7.4</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
			<version>2.7.4</version>
		</dependency>
		<!-- for lannister.web -->
		<dependency>
			<groupId>net.sf.jtidy</groupId>
			<artifactId>jtidy</artifactId>
			<version>r938</version>
		</dependency>
		<!-- for lannister.web -->
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.10</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-tcnative-boringssl-static</artifactId>
			<version>1.1.33.Fork22</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-epoll</artifactId>
			<version>4.1.5.Final</version>
			<classifier>linux-x86_64</classifier>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.19.0-GA</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>
	</dependencies>
	<build>
		<filters>
			<filter>src/main/filters/${env}.properties</filter>
		</filters>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<targetPath>../conf/</targetPath>
				<includes>
					<include>lannister.properties</include>
					<include>lannister.cluster.xml</include>
					<include>lannister.log4j.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<targetPath>../bin/</targetPath>
				<includes>
					<include>startup.sh</include>
					<include>shutdown.sh</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/webapp</directory>
				<targetPath>../webapp/</targetPath>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
				<includes>
					<include>lannister.properties</include>
					<include>lannister.cluster.xml</include>
					<include>lannister.log4j.xml</include>
				</includes>
			</testResource>
		</testResources>

		<plugins>
			<!-- for jar packaging -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
					<archive>
						<manifestEntries>
							<Class-Path>../conf/ ../webapp/</Class-Path>
						</manifestEntries>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<classpathPrefix>./</classpathPrefix>
							<mainClass>net.anyflow.lannister.Application</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- skip test on mavening... To skip test, follow the command : mvn package 
				-Dmaven.test.skip=true -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<skipTests>false</skipTests>
					<includes>
						<include>**/TestSuite.java</include>
					</includes>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.directory}/conf</additionalClasspathElement>
						<additionalClasspathElement>${project.build.directory}/plugin</additionalClasspathElement>
						<additionalClasspathElement>${project.build.directory}/webapp</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<!-- run jar via maven (mvn exec:java) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
					<mainClass>net.anyflow.lannister.Application</mainClass>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.directory}/conf</additionalClasspathElement>
						<additionalClasspathElement>${project.build.directory}/plugin</additionalClasspathElement>
						<additionalClasspathElement>${project.build.directory}/webapp</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<!-- Copy dependencies to lib directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>deploy</id>
						<configuration>
							<target>
								<echo>Copying README.md / LICENSE...</echo>
								<copy file="../LICENSE" todir="${project.build.directory}" />
								<copy file="../README.md" todir="${project.build.directory}" />
							</target>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- create archive for deploy -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<finalName>${project.build.finalName}</finalName>
					<outputDirectory>${project.basedir}/bin</outputDirectory>
					<workDirectory>target/assembly/work</workDirectory>
					<descriptors>
						<descriptor>${project.basedir}/src/main/assembly/dep.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>assembly</id>
						<phase>deploy</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>dependencies</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
